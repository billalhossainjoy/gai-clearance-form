version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    restart: always
    container_name: gai-db-production
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    volumes:
      - "mongo_data:/data/db"
      - "mongo_conf:/data/configdb"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      gai-production:

  server:
    build:
      context: ./server
      target: production
    container_name: gai-server-production
    restart: always
    depends_on:
      - mongodb
    env_file:
      - ./server/.env.production
    networks:
      gai-production:

  nginx-server:
    image: nginx:alpine
    container_name: nginx-server
    restart: always
    volumes:
      - ./server/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - server
    networks:
      gai-production:


  client:
    build:
      context: ./client
      target: production
    container_name: gai-client-production
    restart: always
    env_file:
      - ./client/.env.production
    networks:
      gai-production:
    depends_on:
      - nginx-server

  cloudflared:
    image: cloudflare/cloudflared
    restart: always
    command: tunnel --config /etc/cloudflared/config.yml run
    container_name: gai-cloudflare-production
    volumes:
      - ./cloudflared:/etc/cloudflared
    depends_on:
      - nginx-server
      - client
    networks:
      gai-production:



volumes:
  mongo_data:
  mongo_conf:

networks:
  gai-production: